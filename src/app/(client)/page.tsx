'use client';

import React, { useEffect, useRef, useState } from 'react';
import 'react-multi-carousel/lib/styles.css';
import Image from 'next/image';

import ReviewSwiper from '@/components/swipers/ReviewSwiper';
import ProfileSwiper from '@/components/swipers/ProfileSwiper';
import SummaryCard from '@/components/cards/SummaryCard';
import CourseSwiper from '@/components/swipers/CourseSwiper';
import QuestionBox from '@/components/ui/QuestionBox';
import { Button } from '@nextui-org/react';
import { useCourse } from '@/hooks/useCourse';
import CheckoutModal from '@/app/(client)/checkout/CheckoutModal';
const page = () => {
  const windowWidth = useRef(window?.innerWidth);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [selectedProduct, setSelectedProduct] = useState(null);
  const openModal = (product) => {
    setSelectedProduct(product);
    setIsModalOpen(true);
  };

  // const closeModal = () => {
  //   setSelectedProduct(null);
  //   setIsModalOpen(false);
  // };
  const { onGetTopCourse } = useCourse();
  const [courseData, setCourseData] = useState(null);
  const teacherData = [
    {
      id: 1,
      image: '/teacher_1.png',
      bandScore: '7.5 IELTS',
      name: 'Nguy·ªÖn VƒÉn A',
    },
    {
      id: 2,
      image: '/teacher_2.png',
      bandScore: '7.0 IELTS',
      name: 'Nguy·ªÖn VƒÉn B',
    },
    {
      id: 3,
      image: '/teacher_3.png',
      bandScore: '7.5 IELTS',
      name: 'Nguy·ªÖn VƒÉn C',
    },
    {
      id: 4,
      image: '/teacher_4.png',
      bandScore: '8 IELTS',
      name: 'Nguy·ªÖn VƒÉn D',
    },
    {
      id: 5,
      image: '/teacher_4.png',
      bandScore: '8 IELTS',
      name: 'Nguy·ªÖn VƒÉn D',
    },
    {
      id: 6,
      image: '/teacher_4.png',
      bandScore: '8 IELTS',
      name: 'Nguy·ªÖn VƒÉn D',
    },
    {
      id: 7,
      image: '/teacher_4.png',
      bandScore: '8 IELTS',
      name: 'Nguy·ªÖn VƒÉn D',
    },
    {
      id: 8,
      image: '/teacher_4.png',
      bandScore: '8 IELTS',
      name: 'Nguy·ªÖn VƒÉn D',
    },
    {
      id: 9,
      image: '/teacher_4.png',
      bandScore: '8 IELTS',
      name: 'Nguy·ªÖn VƒÉn D',
    },
    {
      id: 10,
      image: '/teacher_4.png',
      bandScore: '8 IELTS',
      name: 'Nguy·ªÖn VƒÉn D',
    },
  ];

  const userData = [
    {
      id: 1,
      user: {
        id: 1,
        name: 'Clara R.Altman',
        skill: 'Intermediate',
        avatar: '/user_1.png',
      },
      content:
        'There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour',
    },
    {
      id: 2,
      user: {
        id: 1,
        name: 'Clara R.Altman',
        skill: 'Intermediate',
        avatar: '/user_1.png',
      },
      content:
        'There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour',
    },
    {
      id: 3,
      user: {
        id: 1,
        name: 'Clara R.Altman',
        skill: 'Intermediate',
        avatar: '/user_1.png',
      },
      content:
        'There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour',
    },
    {
      id: 4,
      user: {
        id: 1,
        name: 'Clara R.Altman',
        skill: 'Intermediate',
        avatar: '/user_1.png',
      },
      content:
        'There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour',
    },
    {
      id: 5,
      user: {
        id: 1,
        name: 'Clara R.Altman',
        skill: 'Intermediate',
        avatar: '/user_1.png',
      },
      content:
        'There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour',
    },
  ];
  const summaryData = [
    {
      id: 1,
      image: '/test.png',
      title: 'Ph∆∞∆°ng ph√°p h·ªçc t·∫≠p',
      content:
        'H·ªçc t·∫≠p c√° nh√¢n ho√°, l·ªô tr√¨nh v√† gi√°o tr√¨nh ri√™ng. Lu√¥n c·∫≠p nh·∫≠t theo t·ª´ng nƒÉm.',
    },
    {
      id: 2,
      image: '/exam.png',
      title: 'Ki·∫øn th·ª©c',
      content:
        'Ng√¢n h√†ng gi√°o tr√¨nh v√† t√†i li·ªáu do A&Z bi√™n so·∫°n ho√†n thi·ªán v√† c·∫≠p nh·∫≠p m·ªõi nh·∫•t theo c·∫•u tr√∫c ƒë·ªÅ thi IELTS 2023',
    },
    {
      id: 3,
      image: '/money.png',
      title: 'Cam k·∫øt ƒë·∫ßu ra',
      content:
        'B·∫£o v·ªá t·ªëi ƒëa quy·ªÅn l·ª£i c·ªßa h·ªçc vi√™n, A&Z cam k·∫øt t√†i tr·ª£ h·ªçc l·∫°i v√† ph√≠ thi l·∫°i n·∫øu h·ªçc vi√™n kh√¥ng ƒë·∫°t k·∫øt qu·∫£ mong mu·ªën.',
    },
    {
      id: 4,
      image: '/heart.png',
      title: 'ƒê·ªôi ng≈© gi·∫£ng vi√™n chuy√™n m√¥n s√¢u',
      content: 'Gi·∫£ng vi√™n t·∫°i A&Z c√≥ tr√¨nh ƒë·ªô IELTS 7.5 -> 8.5.',
    },
    {
      id: 5,
      image: '/puzzle.png',
      title: 'H·ªá th·ªëng b√†i thi ƒë√°nh gi√° ch√≠nh x√°c tr√¨nh ƒë·ªô',
      content:
        'H·ªçc vi√™n lu√¥n c√≥ th·ªÉ bi·∫øt ch√≠nh x√°c tr√¨nh ƒë·ªô b·∫£n th√¢n th√¥ng qua h·ªá th·ªëng b√†i thi th·ª≠ IELTS do A&Z t·ªï ch·ª©c.',
    },
  ];

  // const courseData = [
  //   {
  //     id: 1,
  //     image: '/course_writing.png',
  //     level: 'Beginner',
  //     title: 'Luy·ªán thi Ielts 4.5',
  //     enrolled: '250.000+',
  //     length: '1h30p/bu·ªïi',
  //     duration: '34 bu·ªïi',
  //   },
  //   {
  //     id: 2,
  //     image: '/course_group.png',
  //     level: 'Intermediate',
  //     title: 'Luy·ªán thi Ielts 5.5',
  //     enrolled: '250.000+',
  //     length: '1h30p/bu·ªïi',
  //     duration: '34 bu·ªïi',
  //   },
  //   {
  //     id: 3,
  //     image: '/course_learn.png',
  //     level: 'Advanced',
  //     title: 'Luy·ªán thi Ielts 6.5',
  //     enrolled: '250.000+',
  //     length: '1h30p/bu·ªïi',
  //     duration: '34 bu·ªïi',
  //   },
  // ];

  /* B·∫Øt ƒë·∫ßu logic l·∫•y top n kh√≥a h·ªçc */
  useEffect(() => {
    const fetchTopCourses = async () => {
      try {
        const response = await onGetTopCourse(5);
        const data = await response.json();
        setCourseData(data);
        console.log('üöÄ ~ file: page.tsx:211 ~ fetchTopCourses ~ data:', data);
      } catch (error) {
        console.error('L·ªói khi g·ªçi API:', error);
      }
    };

    fetchTopCourses();
  }, []);

  /* K·∫øt th√∫c logic l·∫•y top n kh√≥a h·ªçc */

  return (
    <div className="flex flex-col h-full w-full">
      {isModalOpen && selectedProduct && (
        <CheckoutModal
          isModalOpen={isModalOpen}
          setIsModalOpen={setIsModalOpen}
          checkedItems={selectedProduct}
          total={selectedProduct.totalCost}
          // Other props as needed
        />
      )}
      <div
        className="flex flex-col lg:flex-row space-between
      h-fit w-full bg-no-repeat bg-cover bg-hero-pattern bg-[#FDF8EE]"
      >
        <div className="flex flex-1 flex-col space-between items-center justify-start px-5 gap-6">
          <p className=" text-2xl sm:text-4xl md:text-5xl lg:text-6xl font-bold">
            <span className="text-[#050C26]">L·ª±a Ch·ªçn </span>
            <span className="text-[#FF7426]">ƒê√∫ng</span>
            <div className="my-2 md:my-4"></div>
            <span className="text-[#050C26]">Cho </span>
            <span className="text-[#FF7426]">T∆∞∆°ng Lai</span>
            <br className="lg:flex hidden" />
          </p>
          <p className="text-sm sm:text-base lg:text-lg font-bold text-justify text-black p-4 max-w-[40ch]">
            T·∫°i A&Z, h·ªçc vi√™n h·ªçc t·∫≠p v√† ph√°t tri·ªÉn theo ph∆∞∆°ng ph√°p ri√™ng ph√π
            h·ª£p v·ªõi s·ª± kh√°c bi·ªát c·ªßa b·∫£n th√¢n, t√†i nguy√™n h·ªçc t·∫≠p c√° nh√¢n ho√°,
            b√†i gi·∫£ng tr·ªçng t√¢m d·ªÖ hi·ªÉu v√† ƒë·∫°t m·ª•c ti√™u trong th·ªùi gian mong
            mu·ªën.
          </p>
          <Button radius="full" size="lg" className="bg-[#FDB21A] text-white">
            Kh√°m ph√° t·∫°i ƒë√¢y
          </Button>
        </div>
        <Image
          alt="hero banner"
          src={`/hero-banner.png`}
          width={windowWidth.current / 2}
          height={windowWidth.current / 4}
          loading="lazy"
        />
      </div>

      <div className="w-full h-fit overflow-hidden bg-transparent relative flex flex-col items-center">
        <div className="w-fit h-fit flex flex-col md:flex-row rounded-md bg-[#4D2C5E] m-16 p-10 items-center gap-y-6 md:gap-x-6">
          <SummaryCard data={summaryData[0]} />
          <SummaryCard data={summaryData[1]} />
          <SummaryCard data={summaryData[2]} />
        </div>
      </div>

      <div
        className="w-full h-fit flex flex-col justify-center items-center bg-[url(/lightbulb.png),_url(/curved_arrow.png)] 
        bg-[length:6rem,_6rem] bg-[repeat:no-repeat,_no-repeat] 
      bg-[position:left_5rem_top,_right_3rem_top]  bg-no-repeat mb-32"
      >
        <div className="text-3xl font-bold">C√°c Kh√≥a H·ªçc N·ªïi B·∫≠t</div>
        <div className="text-sm text-gray-500">
          Top 3 kh√≥a h·ªçc ƒë∆∞·ª£c ƒëƒÉng k√Ω nhi·ªÅu nh·∫•t t·∫°i A&Z{' '}
        </div>
        <CourseSwiper data={courseData} openModal={openModal} />
      </div>

      <div className="w-full h-fit flex flex-col lg:flex-row bg-[#FDF8EE] p-8 items-center">
        <div
          className="w-full h-full bg-[#FDF8EE]"
          style={{ position: 'relative', width: '50%', paddingBottom: '20%' }}
        >
          <Image
            alt="Image Alt"
            src={'/studying_girl.png'}
            layout="fill"
            objectFit="contain" // Scale your image down to fit into the container
          />
        </div>
        <div className="flex flex-col justify-center items-start gap-y-4">
          <div className="text-3xl font-bold gap-y-2 flex flex-col justify-center items-start">
            <div>Cam k·∫øt</div>
            <div>
              {' '}
              <span className="text-orange">ch·∫•t l∆∞·ª£ng</span>
              <span>&nbsp;h·ªçc</span>
            </div>
          </div>

          <SummaryCard
            data={summaryData[3]}
            iconBg="bg-[#4D2C5E]"
            titleColor="text-[#000000]"
          />
          <SummaryCard
            data={summaryData[4]}
            iconBg="bg-[#4D2C5E]"
            titleColor="text-[#000000]"
          />
        </div>
      </div>

      <div
        className="w-full h-[80rem] bg-[url(/bg_ellipse_left.png),_url(/bg_ellipse_right.png)] 
        bg-[length:20rem,_20rem] bg-[repeat:no-repeat,_no-repeat] 
      bg-[position:left__top_,_right_bottom]  bg-no-repeat overflow-hidden bg-gray-50 relative flex flex-col items-center justify-center"
      >
        <div className="flex flex-col md:flex-row my-10 items-center justify-center font-semibold text-2xl font-PlaypenSans">
          <span>Nh·ªØng c√¢u chuy·ªán th√†nh c√¥ng c√πng &nbsp;</span>
          <span className="text-[#FF7426]"> IELTS T·∫°i A&Z</span>
        </div>

        <div className="w-full h-fit">
          <div className="h-fit w-full flex items-center">
            <ReviewSwiper data={userData} reverseDirection={true} />
          </div>
          <div className="h-fit w-full flex items-center mx-10">
            <ReviewSwiper data={userData} reverseDirection={false} />
          </div>
        </div>
        <div className="w-full h-fit flex flex-row justify-around items-center mt-8">
          <Image
            alt="curved arrow"
            src="/curved_arrow.png"
            width={150}
            height={150}
          />
          <span className="font-semibold text-2xl">Gi·∫£ng Vi√™n</span>
          <Image alt="planet" src="/planet.png" width={120} height={120} />
        </div>
        <div className="w-[75%] flex flex-row items-center justify-center">
          <ProfileSwiper data={teacherData} />
        </div>
      </div>

      <div className="w-full h-fit flex justify-center items-center mb-32 bg-gray-50">
        <QuestionBox handleSubmit={() => {}} />
      </div>
    </div>
  );
};
export default page;
